package br.com.virtualoutletstore.composite.cart;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;

import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ErrorCollector;
import org.junit.runners.MethodSorters;

import br.com.virtualoutletstore.builder.catalog.Catalog;
import br.com.virtualoutletstore.singleton.inventory.ProductInventory;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class CartTest {
	
	private Cart cart;
	
	@Rule
	public ErrorCollector error = new ErrorCollector();
	
	@Before
	public void setScenarioCartTest() {
		Catalog catalog = new Catalog();
		catalog.addProductToCatalog("book");
		catalog.addProductToCatalog("tshirt");
		catalog.addProductToCatalog("ssdcard");
		catalog.addProductToCatalog("mouse");
		ProductInventory.addCatalogToInventory(catalog);
		cart = new Cart();
	}
	
	@Test
	public void a_addingProductToCart() {
		// Action
		cart.addProductToCart(1, 2);
		cart.addProductToCart(2, 3);
		cart.addProductToCart(3, 4);
		cart.addProductToCart(4, 5);
		
		// Verification
		error.checkThat(cart.getCart().size(), is(equalTo(14)));
	}
	
	@Test
	public void b_removingProductFromCart() {
		// Action
		cart.removeProductFromCart(1, 1);
		
		// Verification
		error.checkThat(cart.getCart().size(), is(equalTo(14)));
	}

	@Test
	public void nome() {
		// Action
		
		
		// Verification
	}

	@Test
	public void nome() {
		// Action
		
		
		// Verification
	}

	@Test
	public void nome() {
		// Action
		
		
		// Verification
	}

	@Test
	public void nome() {
		// Action
		
		
		// Verification
	}

	@Test
	public void nome() {
		// Action
		
		
		// Verification
	}

	@Test
	public void nome() {
		// Action
		
		
		// Verification
	}
	
}
