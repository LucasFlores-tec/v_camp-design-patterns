package br.com.virtualstore.singleton.inventory;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;

import org.hamcrest.CoreMatchers;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ErrorCollector;

import br.com.virtualoutletstore.builder.catalog.Catalog;
import br.com.virtualoutletstore.singleton.inventory.ProductInventory;

public class ProductInventoryTest {
	
	private Catalog catalog;
	
	@Rule
	public ErrorCollector error = new ErrorCollector();
	
	@Before
	public void setScerario() {
		catalog = new Catalog();
		catalog.addProductToCatalog("book");
		catalog.addProductToCatalog("tshirt");
		catalog.addProductToCatalog("ssdcard");
		catalog.addProductToCatalog("mouse");
	}
	
	@Test
	public void getInventory() {
		// Action
		ProductInventory.addCatalogToInventory(catalog);
		
		// Verification
		error.checkThat(ProductInventory.getInstanceOfInventory().getInventory().size(), is(equalTo(4)));
	}
	
	@Test
	public void addCatalogToInventory() {
		// Action
		ProductInventory.addCatalogToInventory(catalog);
		
		// Verification
		error.checkThat(ProductInventory.getInstanceOfInventory().getInventory().get(0).getSku(), is(equalTo(catalog.getAllProducts().get(0).getSku())));
		error.checkThat(ProductInventory.getInstanceOfInventory().getInventory().get(1).getSku(), is(equalTo(catalog.getAllProducts().get(1).getSku())));
		error.checkThat(ProductInventory.getInstanceOfInventory().getInventory().get(2).getSku(), is(equalTo(catalog.getAllProducts().get(2).getSku())));
		error.checkThat(ProductInventory.getInstanceOfInventory().getInventory().get(3).getSku(), is(equalTo(catalog.getAllProducts().get(3).getSku())));
	}
	
	@Test
	public void getProductStock() {
		
		// Action
		int product1 = ProductInventory.getInstanceOfInventory().getProductStock(1);
		int product2 = ProductInventory.getInstanceOfInventory().getProductStock(2);
		int product3 = ProductInventory.getInstanceOfInventory().getProductStock(3);
		int product4 = ProductInventory.getInstanceOfInventory().getProductStock(4);
		
		// Verification
		error.checkThat(product1, is(equalTo(10)));
		
	}
	
	

}
