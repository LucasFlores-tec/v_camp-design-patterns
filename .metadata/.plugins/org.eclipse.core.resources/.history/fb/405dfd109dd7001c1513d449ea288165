package br.com.virtualoutletstore.observer.backoffice;

import br.com.virtualoutletstore.facade.order.Order;
import br.com.virtualoutletstore.iterator.orderlist.OrderList;

public class Backoffice implements OrderListObserver {
	
	@Override
	public void renderOrderList(OrderList orderList) {
		int numberOfOrdersInTheOrderList = orderList.getListOfOrders().size();
		System.out.println("\nORDER ADDED:\n");
		System.out.println("Order: " + OrderList.getInstanceOfOrderList().getListOfOrders().get(numberOfOrdersInTheOrderList-1));
		System.out.println("Status: " + OrderList.getInstanceOfOrderList().getListOfOrders().get(numberOfOrdersInTheOrderList-1).getStatus());
		System.out.println("Cart: " + OrderList.getInstanceOfOrderList().getListOfOrders().get(numberOfOrdersInTheOrderList-1).getCart());
		System.out.println(OrderList.getInstanceOfOrderList().getListOfOrders().get(numberOfOrdersInTheOrderList-1).getShipping());
		System.out.println("\n=================\n");
	}

	public void getOrderList() {
		for(Order order: OrderList.getInstanceOfOrderList().getListOfOrders()) {
			System.out.println("Cart: " + order.getOrderCart());
			System.out.println("Status: " + order.getOrderStatus());
			System.out.println("Shipping: " + order.getOrderShipping());
			System.out.println("\n=================\n");
		}
	}

}